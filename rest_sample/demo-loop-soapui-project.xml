<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="6117ebb6-809d-4f31-8068-8d6dbffbaf48" activeEnvironment="Default" name="demo-loop" resourceRoot="" soapui-version="5.4.0" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="aafb6b26-f0d1-4fcc-b067-3076b2ec2852" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:8088" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:8080</con:endpoint></con:endpoints><con:resource name="GetIds" path="/getIds" id="0823bc72-284b-4280-baed-86df30cf0824"><con:settings/><con:parameters/><con:method name="GetIds 1" id="c2f59053-cc91-4030-9102-aced25744804" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element>Results</con:element></con:representation><con:request name="Request 1" id="b25bdf96-78aa-42c2-beb6-1c0140109706" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080</con:endpoint><con:request/><con:originalUri>http://localhost/getIds</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="173ec0fc-20fb-444f-aba2-9c5f620b8f9c" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:8080" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:8080</con:endpoint></con:endpoints><con:resource name="CreateId" path="/createId" id="9a54212a-b18f-471f-9de4-b2330f57d14d"><con:settings/><con:parameters/><con:method name="CreateId 1" id="3597e2db-43ec-478e-b362-c0d3bf457d0d" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:cre="http://localhost/createId">cre:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="09e56f59-ba30-4444-81bf-5dcaf52ceec4" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080</con:endpoint><con:request>{
	"id" : ${#TestCase#ID}
}
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="412ca99e-8415-4e39-b747-29f028fe50e1" name="TestSuite 1"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="12c8398b-c962-4839-987c-4d372831ee3a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="GetJDBCResponse" id="5b16bb7e-c4dd-4356-ac5f-4bca6b4b1f54"><con:settings/><con:config service="http://localhost:8088" methodName="GetIds 1" resourcePath="/getIds" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request" id="56d7be3a-f60f-465b-909e-8eb46375b147" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080</con:endpoint><con:request/><con:originalUri>http://localhost/getIds</con:originalUri><con:assertion type="GroovyScriptAssertion" id="9b652221-412d-455c-8a27-4859a9f2431b" name="Script Assertion"><con:configuration><scriptText>assert context.response, 'response is empty or null'
log.info context.response</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Conditional Goto" id="d5910dd7-09d4-4053-8818-cad8a6d825d7"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>HasIdInResponse</con:name><con:type>XPATH</con:type><con:expression>count (//CAT.ID) = 0</con:expression><con:targetStep>Continue</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="groovy" name="DataSource" id="acec892d-afa9-4549-b41e-fe22ee20f328"><con:settings/><con:config><script>def jdbcResponse = context.testCase.testStepList[context.currentStepIndex-2].httpRequest.responseContentAsString
def ids = new XmlSlurper().parseText(jdbcResponse).'**'.findAll {it.name() == 'Row'}.'CAT.ID'*.text()
context.testCase.setPropertyValue('ID', ids.pop().toString())
context.testCase.setPropertyValue('IDS', ids.join(',') )
</script></con:config></con:testStep><con:testStep type="restrequest" name="POSTRequest" id="de592b4f-322a-4d5f-8387-d31ae9b2957d"><con:settings/><con:config service="http://localhost:8080" resourcePath="/createId" methodName="CreateId 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request2" id="09e56f59-ba30-4444-81bf-5dcaf52ceec4" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080</con:endpoint><con:request>{
	"id" : "${#TestCase#ID}"
}
</con:request><con:originalUri>http://localhost/createId</con:originalUri><con:assertion type="GroovyScriptAssertion" id="1cb51783-b10f-4906-a144-1d8856406d52" name="Script Assertion"><con:configuration><scriptText>assert context.response, 'response is empty or null'
log.info context.response
def getId = { data -> new groovy.json.JsonSlurper().parseText(data).id}
def reqId = getId(context.expand(context.request))
def resId = getId(context.response)
assert resId == reqId, 'Id of request and response are not matching'</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Loop" id="44e66a88-bb90-42a9-aa37-a0bc0304e687"><con:settings/><con:config><script>/**
 * Get next id, Run previous POST request step until there is id left
 */
def ids = context.testCase.getPropertyValue('IDS')?.split(',')*.trim() as List ?: null 
def id = ids.pop()
if (id) {
	context.testCase.setPropertyValue('ID', id)
	context.testCase.setPropertyValue('IDS', ids.join(',') )
	testRunner.gotoStep(context.currentStepIndex-1)
} 
</script></con:config></con:testStep><con:testStep type="groovy" name="Continue" id="f4e47c8c-18cc-4c6e-95df-c3d7e8d94785"><con:settings/><con:config><script>/* 
 *  this is just place holder step to be able execute the loop ; nothing to do here
 */</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>ID</con:name><con:value>186</con:value></con:property><con:property><con:name>IDS</con:name><con:value/></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:restMockService id="64c991c4-e2df-4036-8fde-cc0d964ae5f0" port="8080" path="/" host="rsettine-t480" name="REST MockService 1"><con:settings/><con:properties/><con:restMockAction name="/getIds" method="GET" resourcePath="/getIds" id="72b6a6ec-54e7-44aa-8dde-25baa77f8900"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath/><con:response name="Response 1" id="97f7f046-24c7-4ca8-ba25-d304f9f8688b" httpResponseStatus="200"><con:settings/><con:script>import groovy.xml.*
def builder = new StreamingMarkupBuilder()
def count = new Random().nextInt(10)
builder.encoding = 'UTF-8'
def Results = builder.bind {
	mkp.xmlDeclaration()    
	results {
		ResultSet(fetchSize: 0) {
			(0..count).eachWithIndex{ id, index ->        
				Row (rowNumber: "${index+1}") {
					'CAT.ID' new Random().nextInt(500)
				}            
			}        
		}
	}
}
context.xml = XmlUtil.serialize(Results)
</con:script><con:responseContent>${xml}</con:responseContent></con:response></con:restMockAction><con:restMockAction name="/createId" method="POST" resourcePath="/createId" id="e8e78256-ee8c-4c47-8b0e-99ca3deec538"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath/><con:response name="Response 1" id="a0cfd330-76e4-43ec-828f-09944c337a75" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:script>context.id = new groovy.json.JsonSlurper().parseText(mockRequest.requestContent).id</con:script><con:responseContent>{
	"status": "Received Input",
	"id" : "${id}"
}
</con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>
